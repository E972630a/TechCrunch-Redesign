{"ast":null,"code":"var _jsxFileName = \"/Users/codygilliam/Documents/TechCrunch-Redesign/src/Components/Articles/Article1.js\";\nimport React, { Component } from 'react';\nimport data from \"../data/post.json\";\nimport '../BlogPost/blogPost.css'; //used to send HTTP requests to back end\n\nimport axios from 'axios';\n\nconst Comment = props => /*#__PURE__*/React.createElement(\"tr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 7\n  }\n}, props.comment.comment_name), /*#__PURE__*/React.createElement(\"td\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }\n}, props.comment.comment_description));\n\nexport default class CreateComments extends Component {\n  constructor(props) {\n    super(props); //binding state objects to 'this' since we are dealing with methods\n\n    this.onChangeCommentName = this.onChangeCommentName.bind(this);\n    this.onChangeCommentDescription = this.onChangeCommentDescription.bind(this);\n    this.onSubmit = this.onSubmit.bind(this); //setting and assigning state\n\n    this.state = {\n      comment_name: '',\n      comment_description: '',\n      comments: []\n    };\n  } //methods to update state properties\n\n\n  onChangeCommentName(e) {\n    this.setState({\n      comment_name: e.target.value\n    });\n  }\n\n  onChangeCommentDescription(e) {\n    this.setState({\n      comment_description: e.target.value\n    });\n  } //handle submit event, create new comment\n\n\n  onSubmit(e) {\n    //prevent default submit behavior\n    // e.preventDefault();\n    console.log(`Form submitted:`);\n    console.log(`Name: ${this.state.comment_name}`);\n    console.log(`Comment Description: ${this.state.comment_description}`);\n    const newComment = {\n      comment_name: this.state.comment_name,\n      comment_description: this.state.comment_description\n    }; //sending POST request to endpoint using axios, endpoint expects new comment in JSON \n\n    axios.post('http://localhost:4000/comments/add', newComment).then(res => console.log(res.data));\n    this.setState({\n      comment_name: '',\n      comment_description: ''\n    });\n  } //retreiving data from database\n  //axios gets access to comments endpoint\n\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/comments/').then(response => {\n      //once data available, assigning response.data to comments using setstate\n      this.setState({\n        comments: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  } // mapping comments \n\n\n  commentList() {\n    return this.state.comments.map((currentComment, i) => {\n      return /*#__PURE__*/React.createElement(Comment, {\n        comment: currentComment,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 14\n        }\n      });\n    });\n  }\n\n  render() {\n    var useThis = this;\n    let one = data.filter(it => new RegExp(1).test(it.id));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"square__post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, one.map((data, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 19\n        }\n      }, data.title), /*#__PURE__*/React.createElement(\"img\", {\n        src: data.img,\n        alt: \"aws logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 19\n        }\n      }, data.date), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 19\n        }\n      }, data.content));\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    }, \"Comments\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }\n    }, \" \", this.commentList()), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, \"Create Comment\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: useThis.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, \"Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.comment_name,\n      onChange: this.onChangeCommentName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, \"Comment:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      value: this.state.comment_description,\n      onChange: this.onChangeCommentDescription,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Create Comment\",\n      className: \"commentBTN\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 23\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"recent__section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, \"Recent Post\"), data.map(function (data, i) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 19\n        }\n      }, data.title));\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/codygilliam/Documents/TechCrunch-Redesign/src/Components/Articles/Article1.js"],"names":["React","Component","data","axios","Comment","props","comment","comment_name","comment_description","CreateComments","constructor","onChangeCommentName","bind","onChangeCommentDescription","onSubmit","state","comments","e","setState","target","value","console","log","newComment","post","then","res","componentDidMount","get","response","catch","error","commentList","map","currentComment","i","render","useThis","one","filter","it","RegExp","test","id","title","img","date","content"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport data from \"../data/post.json\";\nimport '../BlogPost/blogPost.css'\n//used to send HTTP requests to back end\nimport axios from 'axios';\n\nconst Comment = props => (\n  <tr>\n      <td>{props.comment.comment_name}</td>\n      <td>{props.comment.comment_description}</td>\n  </tr>\n)\n\nexport default class CreateComments extends Component {\n\n  constructor(props){\n    super(props);\n    //binding state objects to 'this' since we are dealing with methods\n    this.onChangeCommentName=this.onChangeCommentName.bind(this);\n    this.onChangeCommentDescription=this.onChangeCommentDescription.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n   \n\n    //setting and assigning state\n    this.state = {\n      comment_name:'',\n      comment_description: '',\n      comments: []\n      \n    }\n  }\n  //methods to update state properties\n  onChangeCommentName(e){\n    this.setState({\n      comment_name:e.target.value\n    });\n  }\n  onChangeCommentDescription(e){\n    this.setState({\n      comment_description:e.target.value\n    });\n  }\n\n  //handle submit event, create new comment\n    onSubmit(e){\n      //prevent default submit behavior\n      // e.preventDefault();\n      console.log(`Form submitted:`);\n      console.log(`Name: ${this.state.comment_name}`);\n      console.log(`Comment Description: ${this.state.comment_description}`);\n\n      const newComment = {\n        comment_name: this.state.comment_name,\n        comment_description: this.state.comment_description\n      };\n      //sending POST request to endpoint using axios, endpoint expects new comment in JSON \n      axios.post('http://localhost:4000/comments/add', newComment)\n        .then(res => console.log(res.data))\n\n      this.setState({\n        comment_name:'',\n        comment_description:''\n      })\n\n    }\n\n\n//retreiving data from database\n//axios gets access to comments endpoint\ncomponentDidMount() {\n  axios.get('http://localhost:4000/comments/')\n      .then(response => {\n          //once data available, assigning response.data to comments using setstate\n          this.setState({ comments: response.data });\n      })\n      .catch(function (error){\n          console.log(error);\n      })\n}\n\n// mapping comments \ncommentList() {\n  return this.state.comments.map((currentComment, i) => {\n      return <Comment comment={currentComment} key={i} />;\n  })\n}\n  render() {\n      var useThis=this\n      let one = data.filter(it => new RegExp(1).test(it.id))\n      return (\n        <div>\n          <div className=\"square__post\">\n          {one.map((data,i) => {\n              return (\n                <div key={i} >\n                  <h2>{data.title}</h2>\n              <img src={data.img} alt=\"aws logo\"/>\n                  <p>{data.date}</p>\n                  <p>{data.content}</p>\n                  </div>\n                  );\n          })}\n                  <h3>Comments</h3>\n                  <p> { this.commentList() }</p>\n\n                <h3>Create Comment</h3>\n                  \n                <form onSubmit = {useThis.onSubmit}>\n                  <div className= \"form-group\">\n                    <label>Name:</label>\n                    <input type=\"text\"\n                    className=\"form-control\"\n                    value={this.state.comment_name}\n                    onChange={this.onChangeCommentName}\n                    />\n                  </div>\n                  <div className = \"form-group\">\n                    <label>Comment:</label>\n                    <input type= \"text\"\n                    className=\"form-control\"\n                    value={this.state.comment_description}\n                    onChange={this.onChangeCommentDescription}\n                    />\n                    </div>\n                    <div className=\"form-group\">\n                      <input \n                      type=\"submit\"\n                      value=\"Create Comment\"\n                      className=\"commentBTN\"\n                      />\n                    </div>\n                  \n                </form>\n                </div>\n           \n            \n            \n          \n\n          <div className=\"recent__section\">\n            <h3>Recent Post</h3>\n            {data.map(function (data, i) {\n              return (\n                <div key={i}>\n                  <h4>{data.title}</h4>\n                </div>\n              );\n            })}\n            \n          </div>\n        </div>\n      );\n    \n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}